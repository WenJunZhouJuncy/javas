数据类型	空间大小	默认值	取值范围
byte	1	0	-128~127
shrot	2	0	-32768~32767
int	4	0	-2147483648~2147483647
long	8	0L

1、整数型字面值被当做Int类型处理  后面加l/L会被当做long类型处理建议使用大写L
2、十进制[默认不写]  八进制[0开头  如 010 == 8]  十六进制[0x开头 如 0x10 == 16]

int类型 456  赋值   int类型 变量a
int a = 456;

int类型 456  赋值   long类型 变量b  小容量转大容量称为自动转型
long b = 456;

int类型 2147483648  超出int字节大小   编译报错
long c = 2147483648;  // 编译报错

long类型 2147483648  赋值  long类型 变量b   不存在类型转换
long d = 2147483648L;
------------------------------------------------------------------------------
大容量不能直接转成小容量   编译报错"可能损失精度"
若要转换  需要强制类型转换

long x = 100L;
int y = x;  //编译报错
int y = (int)x; //编译通过 但可能损失精度

注：大容量转小容量 对于byte short char  字面值只要不超出对应容量 可以(赋值)编译通过
int 类型 127 赋值 byte 类型 变量a  大容量转小容量
byte a = 127;  //编译通过
byte b = 128;  //编译报错"损失精度"
byte c = (byte)128;  //编译通过  但可能损失精度

short s = 32767; //通过
char c1 = 65535; //通过

----------------------------------------------------------------
浮点型
所有的小数字面值都被当做double类型处理

public class DoubleTest{
  public static void mian(String[] args){
    double a = 3.14;
    float b = 3.14; //编译报错
    float c = 3.14F;
    float d = (float)3.14;

  }
}
